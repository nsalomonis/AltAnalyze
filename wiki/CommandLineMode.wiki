#summary FAQ-Command Line Mode

==_Running AltAnalyze from Command Line Interface_==

In addition to the graphical user interface (GUI), AltAnalyze can be easily run by command-line. This includes jobs run locallly, on a remote Linux server or cluster. This works fine given that the user knows the file paths of the directories containing input files, the output directory and has already created files containing the groups and comparisons for all samples analyzed. 

*Creating Groups and Comparison Files* - 
Creating groups and comparison files is needed beforehand, but is fairly easy. Just follow the directions listed [ManualGroupsCompsCreation here]. This can be done in an automated fashion as well, if input files have a [PredictGroupsComps defined naming structure].

*Running Command Line from Source or Compiled Versions* - 
The command-line can be run from the source code or OS-specific binaries. The binaries are recommended since these already contain graphical, statistical and webservice dependencies that need to be separately installed for the source code (see more information [StandAloneDependencies here]). 

When running with OS-specific binaries of AltAnalyze directly call the binary files themselves:
 * Windows OS _*{{{ AltAnalyze.exe }}}*_ (note: progress is hidden)
 * Mac OS X _*{{{ AltAnalyze.app/Contents/MacOS/AltAnalyze }}}*_
 * Ubuntu OS _*{{{ ./AltAnalyze }}}*_
 * Python source code _*{{{ python AltAnalyze.py }}}*_

Examples:

_*Downloading and installing a species specific database (mouse)*_

{{{
python AltAnalyze.py --species Mm --update Official --version EnsMart65
}}}

_*Analyzing RNA-Seq files – BED format exons and junction results using default options and GO-Elite*_

{{{
python AltAnalyze.py --species Hs --platform RNASeq --bedDir "C:/BEDFiles" --groupdir "C:/BEDFiles/groups.YourExperiment.txt" --compdir "C:/BEDFiles/comps.YourExperiment.txt" --output "C:/BEDFiles" --expname "YourExperiment --runGOElite yes"
}}}

_*Analyzing CEL files – Affymetrix 3’ array using default options and GO-Elite*_

{{{
python AltAnalyze.py --species Mm --arraytype "3'array" --celdir "C:/CELFiles" --groupdir "C:/CELFiles/groups.YourExperiment.txt" --compdir "C:/CELFiles/comps.YourExperiment.txt" --output "C:/CELFiles" --expname "YourExperiment --runGOElite yes"
}}}

_*Analyzing  CEL files – Exon 1.0 array using default options*_

{{{
python AltAnalyze.py --species Mm --arraytype exon --celdir "C:/CELFiles" --groupdir "C:/CELFiles/groups.YourExperiment.txt" --compdir "C:/CELFiles/comps.YourExperiment.txt" --output "C:/CELFiles" --expname "YourExperiment"
}}}

_*Analyzing  CEL files – Exon 1.0 array using custom options*_

{{{
python AltAnalyze.py --species Hs --arraytype exon --celdir "C:/CELFiles" --groupdir "C:/CELFiles/groups.YourExperiment.txt" --compdir "C:/CELFiles/comps.YourExperiment.txt" --output "C:/CELFiles" --expname "YourExperiment" --runGOElite no --dabgp 0.01 --rawexp 100 --avgallss yes ––noxhyb yes --analyzeAllGroups " all groups" ––GEcutoff 4 --probetype core --altp 0.001 --altmethod FIRMA ––altscore 8 --exportnormexp yes ––runMiDAS no --ASfilter yes --mirmethod "two or more" --calcNIp yes
}}}

_*Analyzing Expression file – Gene 1.0 array using default options, without GO-Elite*_

{{{
python AltAnalyze.py --species Mm --arraytype gene --expdir "C:/CELFiles/ExpressionInput/exp.YourExperiment.txt" --groupdir "C:/CELFiles/groups.YourExperiment.txt" --compdir "C:/CELFiles/comps.YourExperiment.txt" --statdir "C:/CELFiles/ExpressionInput/stats.YourExperiment.txt" --output "C:/CELFiles"
}}}

_*Analyzing Filtered Expression file – Exon 1.0 array using default options*_

{{{
python AltAnalyze.py --species Hs --arraytype exon --filterdir "C:/CELFiles/Filtered/Hs_Exon_prostate_vs_lung.p5_average.txt" --output "C:/CELFiles"
}}}

_*Annotate External Probe set results – Exon 1.0 array using default options*_

{{{
python AltAnalyze.py --species Rn --arraytype exon --annotatedir "C:/JETTA_Results/Hs_tumor_progression.txt" --output "C:/JETTA_Results" --runGOElite yes
}}}

_*Return All AltAnalyze results with NO FILTERING – Exon 1.0 array using default options*_

{{{
python AltAnalyze.py --species Mm --arraytype gene --celdir "C:/CELFiles" --groupdir "C:/CELFiles/groups.YourExperiment.txt" --compdir "C:/CELFiles/comps.YourExperiment.txt" --output "C:/CELFiles" --expname "YourExperiment" --returnAll yes
}}}

_*Updating the database for a species*_

{{{
python AltAnalyze.py --species Mm --update Official --version EnsMart65
}}}

_*Operating System Example Folder Locations*_

 * *PC*: "C:/CELFiles"

 * *Mac OSX*: "/root/user/admin/CELFiles

 * *Linux*: "/hd3/home/admin/CELFiles

When the analysis is finished, the results will be stored just as with the GUI (e.g., alternative exon results in AltResults and gene expression results in ExpressionOutput).